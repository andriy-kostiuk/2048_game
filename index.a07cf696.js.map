{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","src/scripts/domUtils.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.initialState = initialState || [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        this.board = JSON.parse(JSON.stringify(this.initialState));\n        this.score = 0;\n        this.status = Game.Statuses.IDLE;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.Statuses.PLAYING;\n                this.addNewTile();\n                this.addNewTile();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.score = 0;\n                this.status = Game.Statuses.IDLE;\n                this.board = JSON.parse(JSON.stringify(this.initialState));\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                var moveLogic = function() {\n                    for(var row = 0; row < 4; row++){\n                        var temp = _this.board[row].filter(function(n) {\n                            return n !== 0;\n                        });\n                        temp = _this.mergeTiles(temp);\n                        temp = _this.addTrailingZeros(temp);\n                        _this.board[row] = temp;\n                    }\n                };\n                this.move(moveLogic);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                var moveLogic = function() {\n                    for(var row = 0; row < 4; row++){\n                        var temp = _this.board[row].filter(function(n) {\n                            return n !== 0;\n                        });\n                        temp = _this.mergeTiles(temp.reverse());\n                        temp = _this.addTrailingZeros(temp).reverse();\n                        _this.board[row] = temp;\n                    }\n                };\n                this.move(moveLogic);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                var moveLogic = function() {\n                    var _loop = function(col) {\n                        var temp = [];\n                        for(var row = 0; row < 4; row++)temp.push(_this.board[row][col]);\n                        temp = temp.filter(function(n) {\n                            return n !== 0;\n                        });\n                        temp = _this.mergeTiles(temp);\n                        temp = _this.addTrailingZeros(temp);\n                        for(var row1 = 0; row1 < 4; row1++)_this.board[row1][col] = temp[row1];\n                    };\n                    for(var col = 0; col < 4; col++)_loop(col);\n                };\n                this.move(moveLogic);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                var moveLogic = function() {\n                    var _loop = function(col) {\n                        var temp = [];\n                        for(var row = 0; row < 4; row++)temp.push(_this.board[row][col]);\n                        temp = temp.filter(function(n) {\n                            return n !== 0;\n                        });\n                        temp = _this.mergeTiles(temp.reverse());\n                        temp = _this.addTrailingZeros(temp).reverse();\n                        for(var row1 = 0; row1 < 4; row1++)_this.board[row1][col] = temp[row1];\n                    };\n                    for(var col = 0; col < 4; col++)_loop(col);\n                };\n                this.move(moveLogic);\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"mergeTiles\",\n            value: function mergeTiles(cells) {\n                var mergedCells = [];\n                for(var i = 0; i < cells.length; i++)if (cells[i] === cells[i + 1]) {\n                    mergedCells.push(cells[i] * 2);\n                    this.score += cells[i] * 2;\n                    i++;\n                } else mergedCells.push(cells[i]);\n                return mergedCells;\n            }\n        },\n        {\n            key: \"addNewTile\",\n            value: function addNewTile() {\n                var emptyCells = this.board.reduce(function(cells, row, rowIndex) {\n                    row.forEach(function(cell, colIndex) {\n                        if (cell === 0) cells.push({\n                            row: rowIndex,\n                            col: colIndex\n                        });\n                    });\n                    return cells;\n                }, []);\n                if (emptyCells.length === 0) return;\n                var randomIndex = Math.floor(Math.random() * emptyCells.length);\n                var _emptyCells_randomIndex = emptyCells[randomIndex], chosenRow = _emptyCells_randomIndex.row, chosenCol = _emptyCells_randomIndex.col;\n                var newValue = Math.random() < 0.1 ? 4 : 2;\n                this.board[chosenRow][chosenCol] = newValue;\n            }\n        },\n        {\n            key: \"addTrailingZeros\",\n            value: function addTrailingZeros(cells) {\n                var normalizeCells = cells.slice();\n                while(normalizeCells.length < 4)normalizeCells.push(0);\n                return normalizeCells;\n            }\n        },\n        {\n            key: \"updateStatus\",\n            value: function updateStatus() {\n                var possibilityNextMove = false;\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    var current = this.board[row][col];\n                    if (current === 2048) {\n                        this.status = Game.Statuses.WIN;\n                        return;\n                    }\n                    if (current === 0) possibilityNextMove = true;\n                    if (col < 3 && current === this.board[row][col + 1]) possibilityNextMove = true;\n                    if (row < 3 && current === this.board[row + 1][col]) possibilityNextMove = true;\n                }\n                this.status = possibilityNextMove ? Game.Statuses.PLAYING : Game.Statuses.LOSE;\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(moveFunc) {\n                if (this.status !== Game.Statuses.PLAYING) return;\n                var prevState = JSON.stringify(this.board);\n                moveFunc();\n                var currentState = JSON.stringify(this.board);\n                if (prevState !== currentState) {\n                    this.addNewTile();\n                    this.updateStatus();\n                }\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"Statuses\", {\n    IDLE: \"idle\",\n    PLAYING: \"playing\",\n    WIN: \"win\",\n    LOSE: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $1c2a18542c385810$exports = {};\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n\nvar $1c2a18542c385810$var$CELL_CLASS = \"field-cell\";\nvar $1c2a18542c385810$var$HIDDEN_CLASS = \"hidden\";\nvar $1c2a18542c385810$var$GRID_SIZE = 4;\nfunction $1c2a18542c385810$var$updateScore(game, gameScore, gameBest) {\n    var currentScore = game.getScore();\n    var pageScore = Number(gameScore.textContent);\n    var pageBest = Number(gameBest.textContent);\n    gameScore.textContent = currentScore;\n    if (currentScore > pageScore) {\n        var difference = currentScore - pageScore;\n        gameScore.style.setProperty(\"--score-diffeerence\", '\"+'.concat(difference, '\"'));\n        gameScore.classList.remove(\"game-score--animate\");\n        gameScore.offsetWidth;\n        gameScore.classList.add(\"game-score--animate\");\n    }\n    if (currentScore > pageBest) {\n        gameBest.textContent = currentScore;\n        localStorage.setItem(\"best\", currentScore);\n    }\n}\nfunction $1c2a18542c385810$var$updateStatus(game, messages) {\n    var _messages = (0, $efec029548ccee7f$export$71511d61b312f219)(messages, 3), messageLose = _messages[0], messageWin = _messages[1], messageStart = _messages[2];\n    var gameStatus = game.getStatus();\n    Array.from(messages).forEach(function(message) {\n        message.classList.add($1c2a18542c385810$var$HIDDEN_CLASS);\n    });\n    switch(gameStatus){\n        case $3d28d7f1aac198f5$exports.Statuses.IDLE:\n            messageStart.classList.remove($1c2a18542c385810$var$HIDDEN_CLASS);\n            break;\n        case $3d28d7f1aac198f5$exports.Statuses.WIN:\n            messageWin.classList.remove($1c2a18542c385810$var$HIDDEN_CLASS);\n            break;\n        case $3d28d7f1aac198f5$exports.Statuses.LOSE:\n            messageLose.classList.remove($1c2a18542c385810$var$HIDDEN_CLASS);\n            break;\n        default:\n            break;\n    }\n}\nfunction $1c2a18542c385810$var$updateCells(game, fieldRows) {\n    var state = game.getState();\n    Array.from(fieldRows).forEach(function(row, rowIndex) {\n        for(var colIndex = 0; colIndex < $1c2a18542c385810$var$GRID_SIZE; colIndex++){\n            var currentNumber = +state[rowIndex][colIndex];\n            var currentElement = row.children[colIndex];\n            currentElement.textContent = currentNumber || \"\";\n            currentElement.classList = \"\";\n            currentElement.classList.add($1c2a18542c385810$var$CELL_CLASS);\n            if (currentNumber) currentElement.classList.add(\"\".concat($1c2a18542c385810$var$CELL_CLASS, \"--\").concat(currentNumber));\n        }\n    });\n}\n$1c2a18542c385810$exports = {\n    updateCells: $1c2a18542c385810$var$updateCells,\n    updateScore: $1c2a18542c385810$var$updateScore,\n    updateStatus: $1c2a18542c385810$var$updateStatus\n};\n\n\nvar $197cd56b15c33885$var$updateCells = $1c2a18542c385810$exports.updateCells, $197cd56b15c33885$var$updateScore = $1c2a18542c385810$exports.updateScore, $197cd56b15c33885$var$updateStatus = $1c2a18542c385810$exports.updateStatus;\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startBtn = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$fieldRows = document.querySelectorAll(\".field-row\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$gameBest = document.querySelector(\".game-best\");\nvar $197cd56b15c33885$var$messages = document.querySelector(\".message-container\").children;\nvar $197cd56b15c33885$var$bestScore = localStorage.getItem(\"best\");\nif ($197cd56b15c33885$var$bestScore) $197cd56b15c33885$var$gameBest.textContent = $197cd56b15c33885$var$bestScore;\nfunction $197cd56b15c33885$var$updateAll() {\n    $197cd56b15c33885$var$updateCells($197cd56b15c33885$var$game, $197cd56b15c33885$var$fieldRows);\n    $197cd56b15c33885$var$updateScore($197cd56b15c33885$var$game, $197cd56b15c33885$var$gameScore, $197cd56b15c33885$var$gameBest);\n    $197cd56b15c33885$var$updateStatus($197cd56b15c33885$var$game, $197cd56b15c33885$var$messages);\n}\ndocument.addEventListener(\"keydown\", function(evt) {\n    if ($197cd56b15c33885$var$game.getStatus() !== $3d28d7f1aac198f5$exports.Statuses.PLAYING) return;\n    switch(evt.key){\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        default:\n            return;\n    }\n    $197cd56b15c33885$var$updateAll();\n});\n$197cd56b15c33885$var$startBtn.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$startBtn.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$startBtn.classList.replace(\"start\", \"restart\");\n        $197cd56b15c33885$var$startBtn.textContent = \"Restart\";\n    } else if ($197cd56b15c33885$var$startBtn.classList.contains(\"restart\")) {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$startBtn.classList.replace(\"restart\", \"start\");\n        $197cd56b15c33885$var$startBtn.textContent = \"Start\";\n    }\n    $197cd56b15c33885$var$updateAll();\n});\n\n})();\n//# sourceMappingURL=index.a07cf696.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst { updateCells, updateScore, updateStatus } = require('./domUtils.js');\n\nconst game = new Game();\n\nconst startBtn = document.querySelector('.start');\nconst fieldRows = document.querySelectorAll('.field-row');\nconst gameScore = document.querySelector('.game-score');\nconst gameBest = document.querySelector('.game-best');\nconst messages = document.querySelector('.message-container').children;\n\nconst bestScore = localStorage.getItem('best');\n\nif (bestScore) {\n  gameBest.textContent = bestScore;\n}\n\nfunction updateAll() {\n  updateCells(game, fieldRows);\n  updateScore(game, gameScore, gameBest);\n  updateStatus(game, messages);\n}\n\ndocument.addEventListener('keydown', (evt) => {\n  if (game.getStatus() !== Game.Statuses.PLAYING) {\n    return;\n  }\n\n  switch (evt.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    default:\n      return;\n  }\n\n  updateAll();\n});\n\nstartBtn.addEventListener('click', () => {\n  if (startBtn.classList.contains('start')) {\n    game.start();\n\n    startBtn.classList.replace('start', 'restart');\n    startBtn.textContent = 'Restart';\n  } else if (startBtn.classList.contains('restart')) {\n    game.restart();\n\n    startBtn.classList.replace('restart', 'start');\n    startBtn.textContent = 'Start';\n  }\n  updateAll();\n});\n","'use strict';\n\nclass Game {\n  static Statuses = {\n    IDLE: 'idle',\n    PLAYING: 'playing',\n    WIN: 'win',\n    LOSE: 'lose',\n  };\n\n  constructor(initialState) {\n    this.initialState = initialState || [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.board = JSON.parse(JSON.stringify(this.initialState));\n    this.score = 0;\n    this.status = Game.Statuses.IDLE;\n  }\n\n  start() {\n    this.status = Game.Statuses.PLAYING;\n    this.addNewTile();\n    this.addNewTile();\n  }\n\n  restart() {\n    this.score = 0;\n    this.status = Game.Statuses.IDLE;\n    this.board = JSON.parse(JSON.stringify(this.initialState));\n  }\n\n  moveLeft() {\n    const moveLogic = () => {\n      for (let row = 0; row < 4; row++) {\n        let temp = this.board[row].filter((n) => n !== 0);\n\n        temp = this.mergeTiles(temp);\n        temp = this.addTrailingZeros(temp);\n\n        this.board[row] = temp;\n      }\n    };\n\n    this.move(moveLogic);\n  }\n  moveRight() {\n    const moveLogic = () => {\n      for (let row = 0; row < 4; row++) {\n        let temp = this.board[row].filter((n) => n !== 0);\n\n        temp = this.mergeTiles(temp.reverse());\n        temp = this.addTrailingZeros(temp).reverse();\n        this.board[row] = temp;\n      }\n    };\n\n    this.move(moveLogic);\n  }\n  moveUp() {\n    const moveLogic = () => {\n      for (let col = 0; col < 4; col++) {\n        let temp = [];\n\n        for (let row = 0; row < 4; row++) {\n          temp.push(this.board[row][col]);\n        }\n        temp = temp.filter((n) => n !== 0);\n\n        temp = this.mergeTiles(temp);\n        temp = this.addTrailingZeros(temp);\n\n        for (let row = 0; row < 4; row++) {\n          this.board[row][col] = temp[row];\n        }\n      }\n    };\n\n    this.move(moveLogic);\n  }\n  moveDown() {\n    const moveLogic = () => {\n      for (let col = 0; col < 4; col++) {\n        let temp = [];\n\n        for (let row = 0; row < 4; row++) {\n          temp.push(this.board[row][col]);\n        }\n        temp = temp.filter((n) => n !== 0);\n        temp = this.mergeTiles(temp.reverse());\n        temp = this.addTrailingZeros(temp).reverse();\n\n        for (let row = 0; row < 4; row++) {\n          this.board[row][col] = temp[row];\n        }\n      }\n    };\n\n    this.move(moveLogic);\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  mergeTiles(cells) {\n    const mergedCells = [];\n\n    for (let i = 0; i < cells.length; i++) {\n      if (cells[i] === cells[i + 1]) {\n        mergedCells.push(cells[i] * 2);\n        this.score += cells[i] * 2;\n        i++;\n      } else {\n        mergedCells.push(cells[i]);\n      }\n    }\n\n    return mergedCells;\n  }\n\n  addNewTile() {\n    const emptyCells = this.board.reduce((cells, row, rowIndex) => {\n      row.forEach((cell, colIndex) => {\n        if (cell === 0) {\n          cells.push({\n            row: rowIndex,\n            col: colIndex,\n          });\n        }\n      });\n\n      return cells;\n    }, []);\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n    const { row: chosenRow, col: chosenCol } = emptyCells[randomIndex];\n    const newValue = Math.random() < 0.1 ? 4 : 2;\n\n    this.board[chosenRow][chosenCol] = newValue;\n  }\n\n  addTrailingZeros(cells) {\n    const normalizeCells = cells.slice();\n\n    while (normalizeCells.length < 4) {\n      normalizeCells.push(0);\n    }\n\n    return normalizeCells;\n  }\n\n  updateStatus() {\n    let possibilityNextMove = false;\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const current = this.board[row][col];\n\n        if (current === 2048) {\n          this.status = Game.Statuses.WIN;\n\n          return;\n        }\n\n        if (current === 0) {\n          possibilityNextMove = true;\n        }\n\n        if (col < 3 && current === this.board[row][col + 1]) {\n          possibilityNextMove = true;\n        }\n\n        if (row < 3 && current === this.board[row + 1][col]) {\n          possibilityNextMove = true;\n        }\n      }\n    }\n\n    this.status = possibilityNextMove\n      ? Game.Statuses.PLAYING\n      : Game.Statuses.LOSE;\n  }\n\n  move(moveFunc) {\n    if (this.status !== Game.Statuses.PLAYING) {\n      return;\n    }\n\n    const prevState = JSON.stringify(this.board);\n\n    moveFunc();\n\n    const currentState = JSON.stringify(this.board);\n\n    if (prevState !== currentState) {\n      this.addNewTile();\n      this.updateStatus();\n    }\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","'use strict';\n\nconst Game = require('../modules/Game.class.js');\n\nconst CELL_CLASS = 'field-cell';\nconst HIDDEN_CLASS = 'hidden';\nconst GRID_SIZE = 4;\n\nfunction updateScore(game, gameScore, gameBest) {\n  const currentScore = game.getScore();\n  const pageScore = Number(gameScore.textContent);\n  const pageBest = Number(gameBest.textContent);\n\n  gameScore.textContent = currentScore;\n\n  if (currentScore > pageScore) {\n    const difference = currentScore - pageScore;\n\n    gameScore.style.setProperty('--score-diffeerence', `\"+${difference}\"`);\n    gameScore.classList.remove('game-score--animate');\n    void gameScore.offsetWidth;\n    gameScore.classList.add('game-score--animate');\n  }\n\n  if (currentScore > pageBest) {\n    gameBest.textContent = currentScore;\n    localStorage.setItem('best', currentScore);\n  }\n}\n\nfunction updateStatus(game, messages) {\n  const [messageLose, messageWin, messageStart] = messages;\n  const gameStatus = game.getStatus();\n\n  Array.from(messages).forEach((message) => {\n    message.classList.add(HIDDEN_CLASS);\n  });\n\n  switch (gameStatus) {\n    case Game.Statuses.IDLE:\n      messageStart.classList.remove(HIDDEN_CLASS);\n      break;\n    case Game.Statuses.WIN:\n      messageWin.classList.remove(HIDDEN_CLASS);\n      break;\n    case Game.Statuses.LOSE:\n      messageLose.classList.remove(HIDDEN_CLASS);\n      break;\n    default:\n      break;\n  }\n}\n\nfunction updateCells(game, fieldRows) {\n  const state = game.getState();\n\n  Array.from(fieldRows).forEach((row, rowIndex) => {\n    for (let colIndex = 0; colIndex < GRID_SIZE; colIndex++) {\n      const currentNumber = +state[rowIndex][colIndex];\n      const currentElement = row.children[colIndex];\n\n      currentElement.textContent = currentNumber || '';\n      currentElement.classList = '';\n      currentElement.classList.add(CELL_CLASS);\n\n      if (currentNumber) {\n        currentElement.classList.add(`${CELL_CLASS}--${currentNumber}`);\n      }\n    }\n  });\n}\n\nmodule.exports = {\n  updateCells,\n  updateScore,\n  updateStatus,\n};\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n"],"names":["key","value","$3d28d7f1aac198f5$exports","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","instance","Constructor","TypeError","board","JSON","parse","stringify","score","status","Statuses","IDLE","PLAYING","addNewTile","_this","move","row","temp","filter","n","mergeTiles","addTrailingZeros","reverse","col","_loop","push","row1","cells","mergedCells","i","length","emptyCells","reduce","rowIndex","forEach","cell","colIndex","randomIndex","Math","floor","random","_emptyCells_randomIndex","chosenRow","chosenCol","newValue","normalizeCells","slice","possibilityNextMove","current","WIN","LOSE","moveFunc","prevState","updateStatus","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","prototype","obj","$1c2a18542c385810$exports","$c3b10a83b523f372$export$71511d61b312f219","arr","len","arr2","Array","$1c2a18542c385810$var$CELL_CLASS","$1c2a18542c385810$var$HIDDEN_CLASS","$197cd56b15c33885$var$updateCells","updateCells","game","fieldRows","state","getState","from","currentNumber","currentElement","children","textContent","classList","add","concat","updateScore","gameScore","gameBest","currentScore","getScore","pageScore","Number","pageBest","difference","style","setProperty","remove","offsetWidth","localStorage","setItem","messages","_messages","isArray","_s","_e","_i","Symbol","iterator","_arr","_n","_d","call","next","done","err","o","minLen","toString","constructor","name","test","messageLose","messageWin","messageStart","gameStatus","getStatus","message","$197cd56b15c33885$var$updateScore","$197cd56b15c33885$var$updateStatus","$197cd56b15c33885$var$game","$197cd56b15c33885$var$startBtn","document","querySelector","$197cd56b15c33885$var$fieldRows","querySelectorAll","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$gameBest","$197cd56b15c33885$var$messages","$197cd56b15c33885$var$bestScore","getItem","$197cd56b15c33885$var$updateAll","addEventListener","evt","moveUp","moveDown","moveLeft","moveRight","contains","start","replace","restart"],"version":3,"file":"index.a07cf696.js.map"}